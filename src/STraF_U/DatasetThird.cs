//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace STraF_U {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DatasetThird : DataSet {
        
        private ThirdDataTable tableThird;
        
        private ThirdTuitionDataTable tableThirdTuition;
        
        private DataRelation relationThirdThirdTuition;
        
        public DatasetThird() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DatasetThird(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Third"] != null)) {
                    this.Tables.Add(new ThirdDataTable(ds.Tables["Third"]));
                }
                if ((ds.Tables["ThirdTuition"] != null)) {
                    this.Tables.Add(new ThirdTuitionDataTable(ds.Tables["ThirdTuition"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ThirdDataTable Third {
            get {
                return this.tableThird;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ThirdTuitionDataTable ThirdTuition {
            get {
                return this.tableThirdTuition;
            }
        }
        
        public override DataSet Clone() {
            DatasetThird cln = ((DatasetThird)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Third"] != null)) {
                this.Tables.Add(new ThirdDataTable(ds.Tables["Third"]));
            }
            if ((ds.Tables["ThirdTuition"] != null)) {
                this.Tables.Add(new ThirdTuitionDataTable(ds.Tables["ThirdTuition"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableThird = ((ThirdDataTable)(this.Tables["Third"]));
            if ((this.tableThird != null)) {
                this.tableThird.InitVars();
            }
            this.tableThirdTuition = ((ThirdTuitionDataTable)(this.Tables["ThirdTuition"]));
            if ((this.tableThirdTuition != null)) {
                this.tableThirdTuition.InitVars();
            }
            this.relationThirdThirdTuition = this.Relations["ThirdThirdTuition"];
        }
        
        private void InitClass() {
            this.DataSetName = "DatasetThird";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DatasetThird.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableThird = new ThirdDataTable();
            this.Tables.Add(this.tableThird);
            this.tableThirdTuition = new ThirdTuitionDataTable();
            this.Tables.Add(this.tableThirdTuition);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("ThirdThirdTuition", new DataColumn[] {
                        this.tableThird.idColumn}, new DataColumn[] {
                        this.tableThirdTuition.stidColumn});
            this.tableThirdTuition.Constraints.Add(fkc);
            fkc.AcceptRejectRule = AcceptRejectRule.None;
            fkc.DeleteRule = Rule.Cascade;
            fkc.UpdateRule = Rule.Cascade;
            this.relationThirdThirdTuition = new DataRelation("ThirdThirdTuition", new DataColumn[] {
                        this.tableThird.idColumn}, new DataColumn[] {
                        this.tableThirdTuition.stidColumn}, false);
            this.Relations.Add(this.relationThirdThirdTuition);
        }
        
        private bool ShouldSerializeThird() {
            return false;
        }
        
        private bool ShouldSerializeThirdTuition() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ThirdRowChangeEventHandler(object sender, ThirdRowChangeEvent e);
        
        public delegate void ThirdTuitionRowChangeEventHandler(object sender, ThirdTuitionRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ThirdDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnid;
            
            private DataColumn columnlname;
            
            private DataColumn columnfname;
            
            private DataColumn columngender;
            
            private DataColumn columnprof;
            
            private DataColumn columngrade;
            
            private DataColumn columngpa;
            
            private DataColumn columnregion;
            
            private DataColumn columnadmisno;
            
            private DataColumn columnpasno;
            
            private DataColumn columnregno;
            
            private DataColumn columnabout1;
            
            private DataColumn columnregno1;
            
            private DataColumn columnabout2;
            
            private DataColumn columnregno2;
            
            private DataColumn columnstate;
            
            private DataColumn columnnote;
            
            internal ThirdDataTable() : 
                    base("Third") {
                this.InitClass();
            }
            
            internal ThirdDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn lnameColumn {
                get {
                    return this.columnlname;
                }
            }
            
            internal DataColumn fnameColumn {
                get {
                    return this.columnfname;
                }
            }
            
            internal DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            internal DataColumn profColumn {
                get {
                    return this.columnprof;
                }
            }
            
            internal DataColumn gradeColumn {
                get {
                    return this.columngrade;
                }
            }
            
            internal DataColumn gpaColumn {
                get {
                    return this.columngpa;
                }
            }
            
            internal DataColumn regionColumn {
                get {
                    return this.columnregion;
                }
            }
            
            internal DataColumn admisnoColumn {
                get {
                    return this.columnadmisno;
                }
            }
            
            internal DataColumn pasnoColumn {
                get {
                    return this.columnpasno;
                }
            }
            
            internal DataColumn regnoColumn {
                get {
                    return this.columnregno;
                }
            }
            
            internal DataColumn about1Column {
                get {
                    return this.columnabout1;
                }
            }
            
            internal DataColumn regno1Column {
                get {
                    return this.columnregno1;
                }
            }
            
            internal DataColumn about2Column {
                get {
                    return this.columnabout2;
                }
            }
            
            internal DataColumn regno2Column {
                get {
                    return this.columnregno2;
                }
            }
            
            internal DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            internal DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            
            public ThirdRow this[int index] {
                get {
                    return ((ThirdRow)(this.Rows[index]));
                }
            }
            
            public event ThirdRowChangeEventHandler ThirdRowChanged;
            
            public event ThirdRowChangeEventHandler ThirdRowChanging;
            
            public event ThirdRowChangeEventHandler ThirdRowDeleted;
            
            public event ThirdRowChangeEventHandler ThirdRowDeleting;
            
            public void AddThirdRow(ThirdRow row) {
                this.Rows.Add(row);
            }
            
            public ThirdRow AddThirdRow(
                        string lname, 
                        string fname, 
                        string gender, 
                        string prof, 
                        System.Byte grade, 
                        System.Byte gpa, 
                        string region, 
                        string admisno, 
                        string pasno, 
                        string regno, 
                        string about1, 
                        string regno1, 
                        string about2, 
                        string regno2, 
                        System.Byte state, 
                        string note) {
                ThirdRow rowThirdRow = ((ThirdRow)(this.NewRow()));
                rowThirdRow.ItemArray = new object[] {
                        null,
                        lname,
                        fname,
                        gender,
                        prof,
                        grade,
                        gpa,
                        region,
                        admisno,
                        pasno,
                        regno,
                        about1,
                        regno1,
                        about2,
                        regno2,
                        state,
                        note};
                this.Rows.Add(rowThirdRow);
                return rowThirdRow;
            }
            
            public ThirdRow FindByid(int id) {
                return ((ThirdRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ThirdDataTable cln = ((ThirdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ThirdDataTable();
            }
            
            internal void InitVars() {
                this.columnid = this.Columns["id"];
                this.columnlname = this.Columns["lname"];
                this.columnfname = this.Columns["fname"];
                this.columngender = this.Columns["gender"];
                this.columnprof = this.Columns["prof"];
                this.columngrade = this.Columns["grade"];
                this.columngpa = this.Columns["gpa"];
                this.columnregion = this.Columns["region"];
                this.columnadmisno = this.Columns["admisno"];
                this.columnpasno = this.Columns["pasno"];
                this.columnregno = this.Columns["regno"];
                this.columnabout1 = this.Columns["about1"];
                this.columnregno1 = this.Columns["regno1"];
                this.columnabout2 = this.Columns["about2"];
                this.columnregno2 = this.Columns["regno2"];
                this.columnstate = this.Columns["state"];
                this.columnnote = this.Columns["note"];
            }
            
            private void InitClass() {
                this.columnid = new DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.columnlname = new DataColumn("lname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlname);
                this.columnfname = new DataColumn("fname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfname);
                this.columngender = new DataColumn("gender", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngender);
                this.columnprof = new DataColumn("prof", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnprof);
                this.columngrade = new DataColumn("grade", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngrade);
                this.columngpa = new DataColumn("gpa", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngpa);
                this.columnregion = new DataColumn("region", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnregion);
                this.columnadmisno = new DataColumn("admisno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnadmisno);
                this.columnpasno = new DataColumn("pasno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpasno);
                this.columnregno = new DataColumn("regno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnregno);
                this.columnabout1 = new DataColumn("about1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnabout1);
                this.columnregno1 = new DataColumn("regno1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnregno1);
                this.columnabout2 = new DataColumn("about2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnabout2);
                this.columnregno2 = new DataColumn("regno2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnregno2);
                this.columnstate = new DataColumn("state", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstate);
                this.columnnote = new DataColumn("note", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnote);
                this.Constraints.Add(new UniqueConstraint("DatasetThirdKey1", new DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columngender.DefaultValue = "эр";
                this.columngrade.DefaultValue = 1;
                this.columngpa.DefaultValue = 0;
                this.columnregion.DefaultValue = "Улаанбаатар";
                this.columnstate.DefaultValue = 1;
            }
            
            public ThirdRow NewThirdRow() {
                return ((ThirdRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ThirdRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ThirdRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ThirdRowChanged != null)) {
                    this.ThirdRowChanged(this, new ThirdRowChangeEvent(((ThirdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ThirdRowChanging != null)) {
                    this.ThirdRowChanging(this, new ThirdRowChangeEvent(((ThirdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ThirdRowDeleted != null)) {
                    this.ThirdRowDeleted(this, new ThirdRowChangeEvent(((ThirdRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ThirdRowDeleting != null)) {
                    this.ThirdRowDeleting(this, new ThirdRowChangeEvent(((ThirdRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveThirdRow(ThirdRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ThirdRow : DataRow {
            
            private ThirdDataTable tableThird;
            
            internal ThirdRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableThird = ((ThirdDataTable)(this.Table));
            }
            
            public int id {
                get {
                    return ((int)(this[this.tableThird.idColumn]));
                }
                set {
                    this[this.tableThird.idColumn] = value;
                }
            }
            
            public string lname {
                get {
                    try {
                        return ((string)(this[this.tableThird.lnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.lnameColumn] = value;
                }
            }
            
            public string fname {
                get {
                    try {
                        return ((string)(this[this.tableThird.fnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.fnameColumn] = value;
                }
            }
            
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableThird.genderColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.genderColumn] = value;
                }
            }
            
            public string prof {
                get {
                    try {
                        return ((string)(this[this.tableThird.profColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.profColumn] = value;
                }
            }
            
            public System.Byte grade {
                get {
                    try {
                        return ((System.Byte)(this[this.tableThird.gradeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.gradeColumn] = value;
                }
            }
            
            public System.Byte gpa {
                get {
                    try {
                        return ((System.Byte)(this[this.tableThird.gpaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.gpaColumn] = value;
                }
            }
            
            public string region {
                get {
                    try {
                        return ((string)(this[this.tableThird.regionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.regionColumn] = value;
                }
            }
            
            public string admisno {
                get {
                    try {
                        return ((string)(this[this.tableThird.admisnoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.admisnoColumn] = value;
                }
            }
            
            public string pasno {
                get {
                    try {
                        return ((string)(this[this.tableThird.pasnoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.pasnoColumn] = value;
                }
            }
            
            public string regno {
                get {
                    try {
                        return ((string)(this[this.tableThird.regnoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.regnoColumn] = value;
                }
            }
            
            public string about1 {
                get {
                    try {
                        return ((string)(this[this.tableThird.about1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.about1Column] = value;
                }
            }
            
            public string regno1 {
                get {
                    try {
                        return ((string)(this[this.tableThird.regno1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.regno1Column] = value;
                }
            }
            
            public string about2 {
                get {
                    try {
                        return ((string)(this[this.tableThird.about2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.about2Column] = value;
                }
            }
            
            public string regno2 {
                get {
                    try {
                        return ((string)(this[this.tableThird.regno2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.regno2Column] = value;
                }
            }
            
            public System.Byte state {
                get {
                    try {
                        return ((System.Byte)(this[this.tableThird.stateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.stateColumn] = value;
                }
            }
            
            public string note {
                get {
                    try {
                        return ((string)(this[this.tableThird.noteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThird.noteColumn] = value;
                }
            }
            
            public bool IslnameNull() {
                return this.IsNull(this.tableThird.lnameColumn);
            }
            
            public void SetlnameNull() {
                this[this.tableThird.lnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsfnameNull() {
                return this.IsNull(this.tableThird.fnameColumn);
            }
            
            public void SetfnameNull() {
                this[this.tableThird.fnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsgenderNull() {
                return this.IsNull(this.tableThird.genderColumn);
            }
            
            public void SetgenderNull() {
                this[this.tableThird.genderColumn] = System.Convert.DBNull;
            }
            
            public bool IsprofNull() {
                return this.IsNull(this.tableThird.profColumn);
            }
            
            public void SetprofNull() {
                this[this.tableThird.profColumn] = System.Convert.DBNull;
            }
            
            public bool IsgradeNull() {
                return this.IsNull(this.tableThird.gradeColumn);
            }
            
            public void SetgradeNull() {
                this[this.tableThird.gradeColumn] = System.Convert.DBNull;
            }
            
            public bool IsgpaNull() {
                return this.IsNull(this.tableThird.gpaColumn);
            }
            
            public void SetgpaNull() {
                this[this.tableThird.gpaColumn] = System.Convert.DBNull;
            }
            
            public bool IsregionNull() {
                return this.IsNull(this.tableThird.regionColumn);
            }
            
            public void SetregionNull() {
                this[this.tableThird.regionColumn] = System.Convert.DBNull;
            }
            
            public bool IsadmisnoNull() {
                return this.IsNull(this.tableThird.admisnoColumn);
            }
            
            public void SetadmisnoNull() {
                this[this.tableThird.admisnoColumn] = System.Convert.DBNull;
            }
            
            public bool IspasnoNull() {
                return this.IsNull(this.tableThird.pasnoColumn);
            }
            
            public void SetpasnoNull() {
                this[this.tableThird.pasnoColumn] = System.Convert.DBNull;
            }
            
            public bool IsregnoNull() {
                return this.IsNull(this.tableThird.regnoColumn);
            }
            
            public void SetregnoNull() {
                this[this.tableThird.regnoColumn] = System.Convert.DBNull;
            }
            
            public bool Isabout1Null() {
                return this.IsNull(this.tableThird.about1Column);
            }
            
            public void Setabout1Null() {
                this[this.tableThird.about1Column] = System.Convert.DBNull;
            }
            
            public bool Isregno1Null() {
                return this.IsNull(this.tableThird.regno1Column);
            }
            
            public void Setregno1Null() {
                this[this.tableThird.regno1Column] = System.Convert.DBNull;
            }
            
            public bool Isabout2Null() {
                return this.IsNull(this.tableThird.about2Column);
            }
            
            public void Setabout2Null() {
                this[this.tableThird.about2Column] = System.Convert.DBNull;
            }
            
            public bool Isregno2Null() {
                return this.IsNull(this.tableThird.regno2Column);
            }
            
            public void Setregno2Null() {
                this[this.tableThird.regno2Column] = System.Convert.DBNull;
            }
            
            public bool IsstateNull() {
                return this.IsNull(this.tableThird.stateColumn);
            }
            
            public void SetstateNull() {
                this[this.tableThird.stateColumn] = System.Convert.DBNull;
            }
            
            public bool IsnoteNull() {
                return this.IsNull(this.tableThird.noteColumn);
            }
            
            public void SetnoteNull() {
                this[this.tableThird.noteColumn] = System.Convert.DBNull;
            }
            
            public ThirdTuitionRow[] GetThirdTuitionRows() {
                return ((ThirdTuitionRow[])(this.GetChildRows(this.Table.ChildRelations["ThirdThirdTuition"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ThirdRowChangeEvent : EventArgs {
            
            private ThirdRow eventRow;
            
            private DataRowAction eventAction;
            
            public ThirdRowChangeEvent(ThirdRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ThirdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ThirdTuitionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnstid;
            
            private DataColumn columntdate;
            
            private DataColumn columntsize;
            
            private DataColumn columntdesc;
            
            internal ThirdTuitionDataTable() : 
                    base("ThirdTuition") {
                this.InitClass();
            }
            
            internal ThirdTuitionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn stidColumn {
                get {
                    return this.columnstid;
                }
            }
            
            internal DataColumn tdateColumn {
                get {
                    return this.columntdate;
                }
            }
            
            internal DataColumn tsizeColumn {
                get {
                    return this.columntsize;
                }
            }
            
            internal DataColumn tdescColumn {
                get {
                    return this.columntdesc;
                }
            }
            
            public ThirdTuitionRow this[int index] {
                get {
                    return ((ThirdTuitionRow)(this.Rows[index]));
                }
            }
            
            public event ThirdTuitionRowChangeEventHandler ThirdTuitionRowChanged;
            
            public event ThirdTuitionRowChangeEventHandler ThirdTuitionRowChanging;
            
            public event ThirdTuitionRowChangeEventHandler ThirdTuitionRowDeleted;
            
            public event ThirdTuitionRowChangeEventHandler ThirdTuitionRowDeleting;
            
            public void AddThirdTuitionRow(ThirdTuitionRow row) {
                this.Rows.Add(row);
            }
            
            public ThirdTuitionRow AddThirdTuitionRow(ThirdRow parentThirdRowByThirdThirdTuition, System.DateTime tdate, System.Single tsize, string tdesc) {
                ThirdTuitionRow rowThirdTuitionRow = ((ThirdTuitionRow)(this.NewRow()));
                rowThirdTuitionRow.ItemArray = new object[] {
                        parentThirdRowByThirdThirdTuition[0],
                        tdate,
                        tsize,
                        tdesc};
                this.Rows.Add(rowThirdTuitionRow);
                return rowThirdTuitionRow;
            }
            
            public ThirdTuitionRow FindBystidtdate(int stid, System.DateTime tdate) {
                return ((ThirdTuitionRow)(this.Rows.Find(new object[] {
                            stid,
                            tdate})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ThirdTuitionDataTable cln = ((ThirdTuitionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ThirdTuitionDataTable();
            }
            
            internal void InitVars() {
                this.columnstid = this.Columns["stid"];
                this.columntdate = this.Columns["tdate"];
                this.columntsize = this.Columns["tsize"];
                this.columntdesc = this.Columns["tdesc"];
            }
            
            private void InitClass() {
                this.columnstid = new DataColumn("stid", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstid);
                this.columntdate = new DataColumn("tdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntdate);
                this.columntsize = new DataColumn("tsize", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntsize);
                this.columntdesc = new DataColumn("tdesc", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntdesc);
                this.Constraints.Add(new UniqueConstraint("DatasetThirdKey2", new DataColumn[] {
                                this.columnstid,
                                this.columntdate}, true));
                this.Constraints.Add(new UniqueConstraint("key1", new DataColumn[] {
                                this.columnstid}, false));
                this.columnstid.AllowDBNull = false;
                this.columnstid.Unique = true;
                this.columntdate.AllowDBNull = false;
            }
            
            public ThirdTuitionRow NewThirdTuitionRow() {
                return ((ThirdTuitionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ThirdTuitionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ThirdTuitionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ThirdTuitionRowChanged != null)) {
                    this.ThirdTuitionRowChanged(this, new ThirdTuitionRowChangeEvent(((ThirdTuitionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ThirdTuitionRowChanging != null)) {
                    this.ThirdTuitionRowChanging(this, new ThirdTuitionRowChangeEvent(((ThirdTuitionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ThirdTuitionRowDeleted != null)) {
                    this.ThirdTuitionRowDeleted(this, new ThirdTuitionRowChangeEvent(((ThirdTuitionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ThirdTuitionRowDeleting != null)) {
                    this.ThirdTuitionRowDeleting(this, new ThirdTuitionRowChangeEvent(((ThirdTuitionRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveThirdTuitionRow(ThirdTuitionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ThirdTuitionRow : DataRow {
            
            private ThirdTuitionDataTable tableThirdTuition;
            
            internal ThirdTuitionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableThirdTuition = ((ThirdTuitionDataTable)(this.Table));
            }
            
            public int stid {
                get {
                    return ((int)(this[this.tableThirdTuition.stidColumn]));
                }
                set {
                    this[this.tableThirdTuition.stidColumn] = value;
                }
            }
            
            public System.DateTime tdate {
                get {
                    return ((System.DateTime)(this[this.tableThirdTuition.tdateColumn]));
                }
                set {
                    this[this.tableThirdTuition.tdateColumn] = value;
                }
            }
            
            public System.Single tsize {
                get {
                    try {
                        return ((System.Single)(this[this.tableThirdTuition.tsizeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThirdTuition.tsizeColumn] = value;
                }
            }
            
            public string tdesc {
                get {
                    try {
                        return ((string)(this[this.tableThirdTuition.tdescColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableThirdTuition.tdescColumn] = value;
                }
            }
            
            public ThirdRow ThirdRow {
                get {
                    return ((ThirdRow)(this.GetParentRow(this.Table.ParentRelations["ThirdThirdTuition"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ThirdThirdTuition"]);
                }
            }
            
            public bool IstsizeNull() {
                return this.IsNull(this.tableThirdTuition.tsizeColumn);
            }
            
            public void SettsizeNull() {
                this[this.tableThirdTuition.tsizeColumn] = System.Convert.DBNull;
            }
            
            public bool IstdescNull() {
                return this.IsNull(this.tableThirdTuition.tdescColumn);
            }
            
            public void SettdescNull() {
                this[this.tableThirdTuition.tdescColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ThirdTuitionRowChangeEvent : EventArgs {
            
            private ThirdTuitionRow eventRow;
            
            private DataRowAction eventAction;
            
            public ThirdTuitionRowChangeEvent(ThirdTuitionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ThirdTuitionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
