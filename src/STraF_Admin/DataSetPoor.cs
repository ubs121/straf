//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace STraF {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DataSetPoor : DataSet {
        
        private PoorDataTable tablePoor;
        
        public DataSetPoor() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DataSetPoor(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Poor"] != null)) {
                    this.Tables.Add(new PoorDataTable(ds.Tables["Poor"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PoorDataTable Poor {
            get {
                return this.tablePoor;
            }
        }
        
        public override DataSet Clone() {
            DataSetPoor cln = ((DataSetPoor)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Poor"] != null)) {
                this.Tables.Add(new PoorDataTable(ds.Tables["Poor"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablePoor = ((PoorDataTable)(this.Tables["Poor"]));
            if ((this.tablePoor != null)) {
                this.tablePoor.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DataSetPoor";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DataSetPoor.xsd";
            this.Locale = new System.Globalization.CultureInfo("mn-MN");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePoor = new PoorDataTable();
            this.Tables.Add(this.tablePoor);
        }
        
        private bool ShouldSerializePoor() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void PoorRowChangeEventHandler(object sender, PoorRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PoorDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnid;
            
            private DataColumn columnlname;
            
            private DataColumn columnfname;
            
            private DataColumn columngender;
            
            private DataColumn columnpasno;
            
            private DataColumn columnregno;
            
            private DataColumn columnschool;
            
            private DataColumn columndegree;
            
            private DataColumn columnprof;
            
            private DataColumn columngrade;
            
            private DataColumn columngpa;
            
            private DataColumn columnregion;
            
            private DataColumn columnadmisno;
            
            private DataColumn columnregdate;
            
            private DataColumn columnenddate;
            
            private DataColumn columnduration;
            
            private DataColumn columntuition;
            
            private DataColumn columnstate;
            
            private DataColumn columnnote;
            
            private DataColumn columnfamily;
            
            private DataColumn columnincome;
            
            internal PoorDataTable() : 
                    base("Poor") {
                this.InitClass();
            }
            
            internal PoorDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn lnameColumn {
                get {
                    return this.columnlname;
                }
            }
            
            internal DataColumn fnameColumn {
                get {
                    return this.columnfname;
                }
            }
            
            internal DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            internal DataColumn pasnoColumn {
                get {
                    return this.columnpasno;
                }
            }
            
            internal DataColumn regnoColumn {
                get {
                    return this.columnregno;
                }
            }
            
            internal DataColumn schoolColumn {
                get {
                    return this.columnschool;
                }
            }
            
            internal DataColumn degreeColumn {
                get {
                    return this.columndegree;
                }
            }
            
            internal DataColumn profColumn {
                get {
                    return this.columnprof;
                }
            }
            
            internal DataColumn gradeColumn {
                get {
                    return this.columngrade;
                }
            }
            
            internal DataColumn gpaColumn {
                get {
                    return this.columngpa;
                }
            }
            
            internal DataColumn regionColumn {
                get {
                    return this.columnregion;
                }
            }
            
            internal DataColumn admisnoColumn {
                get {
                    return this.columnadmisno;
                }
            }
            
            internal DataColumn regdateColumn {
                get {
                    return this.columnregdate;
                }
            }
            
            internal DataColumn enddateColumn {
                get {
                    return this.columnenddate;
                }
            }
            
            internal DataColumn durationColumn {
                get {
                    return this.columnduration;
                }
            }
            
            internal DataColumn tuitionColumn {
                get {
                    return this.columntuition;
                }
            }
            
            internal DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            internal DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            
            internal DataColumn familyColumn {
                get {
                    return this.columnfamily;
                }
            }
            
            internal DataColumn incomeColumn {
                get {
                    return this.columnincome;
                }
            }
            
            public PoorRow this[int index] {
                get {
                    return ((PoorRow)(this.Rows[index]));
                }
            }
            
            public event PoorRowChangeEventHandler PoorRowChanged;
            
            public event PoorRowChangeEventHandler PoorRowChanging;
            
            public event PoorRowChangeEventHandler PoorRowDeleted;
            
            public event PoorRowChangeEventHandler PoorRowDeleting;
            
            public void AddPoorRow(PoorRow row) {
                this.Rows.Add(row);
            }
            
            public PoorRow AddPoorRow(
                        string lname, 
                        string fname, 
                        string gender, 
                        string pasno, 
                        string regno, 
                        int school, 
                        System.Byte degree, 
                        string prof, 
                        System.Byte grade, 
                        System.Byte gpa, 
                        int region, 
                        string admisno, 
                        System.DateTime regdate, 
                        System.DateTime enddate, 
                        System.Byte duration, 
                        System.Single tuition, 
                        System.Byte state, 
                        string note, 
                        System.Byte family, 
                        System.Single income) {
                PoorRow rowPoorRow = ((PoorRow)(this.NewRow()));
                rowPoorRow.ItemArray = new object[] {
                        null,
                        lname,
                        fname,
                        gender,
                        pasno,
                        regno,
                        school,
                        degree,
                        prof,
                        grade,
                        gpa,
                        region,
                        admisno,
                        regdate,
                        enddate,
                        duration,
                        tuition,
                        state,
                        note,
                        family,
                        income};
                this.Rows.Add(rowPoorRow);
                return rowPoorRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                PoorDataTable cln = ((PoorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new PoorDataTable();
            }
            
            internal void InitVars() {
                this.columnid = this.Columns["id"];
                this.columnlname = this.Columns["lname"];
                this.columnfname = this.Columns["fname"];
                this.columngender = this.Columns["gender"];
                this.columnpasno = this.Columns["pasno"];
                this.columnregno = this.Columns["regno"];
                this.columnschool = this.Columns["school"];
                this.columndegree = this.Columns["degree"];
                this.columnprof = this.Columns["prof"];
                this.columngrade = this.Columns["grade"];
                this.columngpa = this.Columns["gpa"];
                this.columnregion = this.Columns["region"];
                this.columnadmisno = this.Columns["admisno"];
                this.columnregdate = this.Columns["regdate"];
                this.columnenddate = this.Columns["enddate"];
                this.columnduration = this.Columns["duration"];
                this.columntuition = this.Columns["tuition"];
                this.columnstate = this.Columns["state"];
                this.columnnote = this.Columns["note"];
                this.columnfamily = this.Columns["family"];
                this.columnincome = this.Columns["income"];
            }
            
            private void InitClass() {
                this.columnid = new DataColumn("id", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.columnlname = new DataColumn("lname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnlname);
                this.columnfname = new DataColumn("fname", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfname);
                this.columngender = new DataColumn("gender", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngender);
                this.columnpasno = new DataColumn("pasno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnpasno);
                this.columnregno = new DataColumn("regno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnregno);
                this.columnschool = new DataColumn("school", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnschool);
                this.columndegree = new DataColumn("degree", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndegree);
                this.columnprof = new DataColumn("prof", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnprof);
                this.columngrade = new DataColumn("grade", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngrade);
                this.columngpa = new DataColumn("gpa", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columngpa);
                this.columnregion = new DataColumn("region", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnregion);
                this.columnadmisno = new DataColumn("admisno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnadmisno);
                this.columnregdate = new DataColumn("regdate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnregdate);
                this.columnenddate = new DataColumn("enddate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnenddate);
                this.columnduration = new DataColumn("duration", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnduration);
                this.columntuition = new DataColumn("tuition", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntuition);
                this.columnstate = new DataColumn("state", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnstate);
                this.columnnote = new DataColumn("note", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnote);
                this.columnfamily = new DataColumn("family", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfamily);
                this.columnincome = new DataColumn("income", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnincome);
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnfname.AllowDBNull = false;
                this.columnregno.AllowDBNull = false;
                this.columnschool.AllowDBNull = false;
            }
            
            public PoorRow NewPoorRow() {
                return ((PoorRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new PoorRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(PoorRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PoorRowChanged != null)) {
                    this.PoorRowChanged(this, new PoorRowChangeEvent(((PoorRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PoorRowChanging != null)) {
                    this.PoorRowChanging(this, new PoorRowChangeEvent(((PoorRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PoorRowDeleted != null)) {
                    this.PoorRowDeleted(this, new PoorRowChangeEvent(((PoorRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PoorRowDeleting != null)) {
                    this.PoorRowDeleting(this, new PoorRowChangeEvent(((PoorRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePoorRow(PoorRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PoorRow : DataRow {
            
            private PoorDataTable tablePoor;
            
            internal PoorRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePoor = ((PoorDataTable)(this.Table));
            }
            
            public int id {
                get {
                    return ((int)(this[this.tablePoor.idColumn]));
                }
                set {
                    this[this.tablePoor.idColumn] = value;
                }
            }
            
            public string lname {
                get {
                    try {
                        return ((string)(this[this.tablePoor.lnameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.lnameColumn] = value;
                }
            }
            
            public string fname {
                get {
                    return ((string)(this[this.tablePoor.fnameColumn]));
                }
                set {
                    this[this.tablePoor.fnameColumn] = value;
                }
            }
            
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tablePoor.genderColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.genderColumn] = value;
                }
            }
            
            public string pasno {
                get {
                    try {
                        return ((string)(this[this.tablePoor.pasnoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.pasnoColumn] = value;
                }
            }
            
            public string regno {
                get {
                    return ((string)(this[this.tablePoor.regnoColumn]));
                }
                set {
                    this[this.tablePoor.regnoColumn] = value;
                }
            }
            
            public int school {
                get {
                    return ((int)(this[this.tablePoor.schoolColumn]));
                }
                set {
                    this[this.tablePoor.schoolColumn] = value;
                }
            }
            
            public System.Byte degree {
                get {
                    try {
                        return ((System.Byte)(this[this.tablePoor.degreeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.degreeColumn] = value;
                }
            }
            
            public string prof {
                get {
                    try {
                        return ((string)(this[this.tablePoor.profColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.profColumn] = value;
                }
            }
            
            public System.Byte grade {
                get {
                    try {
                        return ((System.Byte)(this[this.tablePoor.gradeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.gradeColumn] = value;
                }
            }
            
            public System.Byte gpa {
                get {
                    try {
                        return ((System.Byte)(this[this.tablePoor.gpaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.gpaColumn] = value;
                }
            }
            
            public int region {
                get {
                    try {
                        return ((int)(this[this.tablePoor.regionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.regionColumn] = value;
                }
            }
            
            public string admisno {
                get {
                    try {
                        return ((string)(this[this.tablePoor.admisnoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.admisnoColumn] = value;
                }
            }
            
            public System.DateTime regdate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePoor.regdateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.regdateColumn] = value;
                }
            }
            
            public System.DateTime enddate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePoor.enddateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.enddateColumn] = value;
                }
            }
            
            public System.Byte duration {
                get {
                    try {
                        return ((System.Byte)(this[this.tablePoor.durationColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.durationColumn] = value;
                }
            }
            
            public System.Single tuition {
                get {
                    try {
                        return ((System.Single)(this[this.tablePoor.tuitionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.tuitionColumn] = value;
                }
            }
            
            public System.Byte state {
                get {
                    try {
                        return ((System.Byte)(this[this.tablePoor.stateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.stateColumn] = value;
                }
            }
            
            public string note {
                get {
                    try {
                        return ((string)(this[this.tablePoor.noteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.noteColumn] = value;
                }
            }
            
            public System.Byte family {
                get {
                    try {
                        return ((System.Byte)(this[this.tablePoor.familyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.familyColumn] = value;
                }
            }
            
            public System.Single income {
                get {
                    try {
                        return ((System.Single)(this[this.tablePoor.incomeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePoor.incomeColumn] = value;
                }
            }
            
            public bool IslnameNull() {
                return this.IsNull(this.tablePoor.lnameColumn);
            }
            
            public void SetlnameNull() {
                this[this.tablePoor.lnameColumn] = System.Convert.DBNull;
            }
            
            public bool IsgenderNull() {
                return this.IsNull(this.tablePoor.genderColumn);
            }
            
            public void SetgenderNull() {
                this[this.tablePoor.genderColumn] = System.Convert.DBNull;
            }
            
            public bool IspasnoNull() {
                return this.IsNull(this.tablePoor.pasnoColumn);
            }
            
            public void SetpasnoNull() {
                this[this.tablePoor.pasnoColumn] = System.Convert.DBNull;
            }
            
            public bool IsdegreeNull() {
                return this.IsNull(this.tablePoor.degreeColumn);
            }
            
            public void SetdegreeNull() {
                this[this.tablePoor.degreeColumn] = System.Convert.DBNull;
            }
            
            public bool IsprofNull() {
                return this.IsNull(this.tablePoor.profColumn);
            }
            
            public void SetprofNull() {
                this[this.tablePoor.profColumn] = System.Convert.DBNull;
            }
            
            public bool IsgradeNull() {
                return this.IsNull(this.tablePoor.gradeColumn);
            }
            
            public void SetgradeNull() {
                this[this.tablePoor.gradeColumn] = System.Convert.DBNull;
            }
            
            public bool IsgpaNull() {
                return this.IsNull(this.tablePoor.gpaColumn);
            }
            
            public void SetgpaNull() {
                this[this.tablePoor.gpaColumn] = System.Convert.DBNull;
            }
            
            public bool IsregionNull() {
                return this.IsNull(this.tablePoor.regionColumn);
            }
            
            public void SetregionNull() {
                this[this.tablePoor.regionColumn] = System.Convert.DBNull;
            }
            
            public bool IsadmisnoNull() {
                return this.IsNull(this.tablePoor.admisnoColumn);
            }
            
            public void SetadmisnoNull() {
                this[this.tablePoor.admisnoColumn] = System.Convert.DBNull;
            }
            
            public bool IsregdateNull() {
                return this.IsNull(this.tablePoor.regdateColumn);
            }
            
            public void SetregdateNull() {
                this[this.tablePoor.regdateColumn] = System.Convert.DBNull;
            }
            
            public bool IsenddateNull() {
                return this.IsNull(this.tablePoor.enddateColumn);
            }
            
            public void SetenddateNull() {
                this[this.tablePoor.enddateColumn] = System.Convert.DBNull;
            }
            
            public bool IsdurationNull() {
                return this.IsNull(this.tablePoor.durationColumn);
            }
            
            public void SetdurationNull() {
                this[this.tablePoor.durationColumn] = System.Convert.DBNull;
            }
            
            public bool IstuitionNull() {
                return this.IsNull(this.tablePoor.tuitionColumn);
            }
            
            public void SettuitionNull() {
                this[this.tablePoor.tuitionColumn] = System.Convert.DBNull;
            }
            
            public bool IsstateNull() {
                return this.IsNull(this.tablePoor.stateColumn);
            }
            
            public void SetstateNull() {
                this[this.tablePoor.stateColumn] = System.Convert.DBNull;
            }
            
            public bool IsnoteNull() {
                return this.IsNull(this.tablePoor.noteColumn);
            }
            
            public void SetnoteNull() {
                this[this.tablePoor.noteColumn] = System.Convert.DBNull;
            }
            
            public bool IsfamilyNull() {
                return this.IsNull(this.tablePoor.familyColumn);
            }
            
            public void SetfamilyNull() {
                this[this.tablePoor.familyColumn] = System.Convert.DBNull;
            }
            
            public bool IsincomeNull() {
                return this.IsNull(this.tablePoor.incomeColumn);
            }
            
            public void SetincomeNull() {
                this[this.tablePoor.incomeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class PoorRowChangeEvent : EventArgs {
            
            private PoorRow eventRow;
            
            private DataRowAction eventAction;
            
            public PoorRowChangeEvent(PoorRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public PoorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
